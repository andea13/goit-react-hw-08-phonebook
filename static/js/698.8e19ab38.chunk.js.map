{"version":3,"file":"static/js/698.8e19ab38.chunk.js","mappings":"qSAEaA,EAAqBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAE/BC,EAAmBH,EAAAA,EAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAM9BG,EAAgBL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8CAKzBK,EAAgBP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gIASzBO,EAAiBT,EAAAA,EAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2EAK7BS,EAAiBX,EAAAA,EAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8BAI7BW,EAAkBb,EAAAA,EAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,wOAa/Ba,EAAiBf,EAAAA,EAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6D,SC8CvC,EA5EkB,WAChB,IAAAe,GAAsCC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApEM,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAEdR,GAAe,SAAAS,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAAK,GAC5D,EAwBMI,EAAQ,WACZZ,EAAe,CACbL,MAAO,GACPC,SAAU,IAEd,EAEA,OACEiB,EAAAA,EAAAA,MAACtC,EAAkB,CAAAuC,SAAA,EACjBC,EAAAA,EAAAA,KAACxB,EAAc,CAAAuB,SAAC,qBAChBD,EAAAA,EAAAA,MAAClC,EAAgB,CAACqC,SAhCD,SAAAZ,GAGnB,GAFAA,EAAMa,iBAEDlB,EAAYJ,MAAMuB,QAAWnB,EAAYH,SAA9C,CAKA,IAAMuB,GAAcT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfX,GAAW,IACdqB,IAAIC,EAAAA,EAAAA,QAGNpB,GAASqB,EAAAA,EAAAA,IAAMH,IACZI,MAAK,WACJX,GACF,IACCY,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACpB,GAbF,MAFEC,MAAM,gCAgBV,EAY6Cf,SAAA,EACvCD,EAAAA,EAAAA,MAAChC,EAAa,CAAAiC,SAAA,EACZC,EAAAA,EAAAA,KAAChC,EAAa,CAAA+B,UACZD,EAAAA,EAAAA,MAAC5B,EAAc,CAAA6B,SAAA,CAAC,SAEdC,EAAAA,EAAAA,KAAC5B,EAAc,CACb2C,KAAK,QACLvB,KAAK,QACLC,MAAOT,EAAYJ,MACnBoC,SAAU5B,EACV6B,aAAa,cAInBjB,EAAAA,EAAAA,KAAChC,EAAa,CAAA+B,UACZD,EAAAA,EAAAA,MAAC5B,EAAc,CAAA6B,SAAA,CAAC,YAEdC,EAAAA,EAAAA,KAAC5B,EAAc,CACb2C,KAAK,WACLvB,KAAK,WACLC,MAAOT,EAAYH,SACnBmC,SAAU5B,EACV6B,aAAa,iBAMrBjB,EAAAA,EAAAA,KAAC1B,EAAe,CAACyC,KAAK,SAAQhB,SAAC,gBAIvC,EChFA,EARkB,WAChB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACkB,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoginFormContainer = styled.div``;\n\nexport const LoginFormWrapper = styled.form`\n  padding: 0 20px;\n  margin: auto auto;\n  width: 500px;\n`;\n\nexport const LoginFormList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const LoginFormItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  &:first-of-type {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 34px;\n`;\nexport const LoginFormInput = styled.input`\n  font-size: 26px;\n`;\n\nexport const LoginFormButton = styled.button`\n  width: 120px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  border: 1px solid #eaeaed;\n`;\n\nexport const LoginFormTitle = styled.h1`\n  text-align: center;\n  justify-content: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { login } from '../../redux/auth/operations';\n\nimport {\n  LoginFormContainer,\n  LoginFormWrapper,\n  LoginFormTitle,\n  LoginFormList,\n  LoginFormItem,\n  LoginFormLabel,\n  LoginFormInput,\n  LoginFormButton,\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const [loginInputs, setLoginInputs] = useState({ email: '', password: '' });\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setLoginInputs(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!loginInputs.email.trim() || !loginInputs.password) {\n      alert('Please fill in all the fields');\n      return;\n    }\n\n    const registeredUser = {\n      ...loginInputs,\n      id: nanoid(),\n    };\n\n    dispatch(login(registeredUser))\n      .then(() => {\n        reset();\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  const reset = () => {\n    setLoginInputs({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <LoginFormContainer>\n      <LoginFormTitle>Please, log in </LoginFormTitle>\n      <LoginFormWrapper onSubmit={handleSubmit}>\n        <LoginFormList>\n          <LoginFormItem>\n            <LoginFormLabel>\n              Email\n              <LoginFormInput\n                type=\"email\"\n                name=\"email\"\n                value={loginInputs.email}\n                onChange={handleChange}\n                autoComplete=\"off\"\n              />\n            </LoginFormLabel>\n          </LoginFormItem>\n          <LoginFormItem>\n            <LoginFormLabel>\n              Password\n              <LoginFormInput\n                type=\"password\"\n                name=\"password\"\n                value={loginInputs.password}\n                onChange={handleChange}\n                autoComplete=\"off\"\n              />\n            </LoginFormLabel>\n          </LoginFormItem>\n        </LoginFormList>\n\n        <LoginFormButton type=\"submit\">Log In</LoginFormButton>\n      </LoginFormWrapper>\n    </LoginFormContainer>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginFormContainer","styled","_templateObject","_taggedTemplateLiteral","LoginFormWrapper","_templateObject2","LoginFormList","_templateObject3","LoginFormItem","_templateObject4","LoginFormLabel","_templateObject5","LoginFormInput","_templateObject6","LoginFormButton","_templateObject7","LoginFormTitle","_templateObject8","_useState","useState","email","password","_useState2","_slicedToArray","loginInputs","setLoginInputs","dispatch","useDispatch","handleChange","event","_event$target","target","name","value","prevState","_objectSpread","_defineProperty","reset","_jsxs","children","_jsx","onSubmit","preventDefault","trim","registeredUser","id","nanoid","login","then","catch","error","console","log","message","alert","type","onChange","autoComplete","LoginForm"],"sourceRoot":""}