{"version":3,"file":"static/js/251.ecb0dea8.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegistrationFormContainer = styled.div``;\n\nexport const RegistrationFormWrapper = styled.form`\n  padding: 0 20px;\n  margin: auto auto;\n  width: 500px;\n`;\n\nexport const RegistrationFormList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const RegistrationFormItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const RegistrationFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 34px;\n`;\n\nexport const RegistrationFormTitle = styled.h1`\n  text-align: center;\n  justify-content: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { register } from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport {\n  RegistrationFormContainer,\n  RegistrationFormTitle,\n  RegistrationFormWrapper,\n  RegistrationFormList,\n  RegistrationFormLabel,\n  RegistrationFormItem,\n} from './RegistrationForm.styled';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst RegistrationForm = () => {\n  const [inputs, setInputs] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  // const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setInputs(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      !inputs.name.trim() ||\n      !inputs.email.trim() ||\n      !inputs.password.trim()\n    ) {\n      alert('Please fill in all the fields');\n      return;\n    }\n\n    console.log(inputs);\n\n    const newUser = {\n      ...inputs,\n      id: nanoid(),\n    };\n\n    console.log(newUser);\n\n    dispatch(register(newUser));\n    reset();\n  };\n\n  const reset = () => {\n    setInputs({\n      name: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <RegistrationFormContainer>\n      <RegistrationFormTitle>Please, fill in to register</RegistrationFormTitle>\n      <RegistrationFormWrapper onSubmit={handleSubmit}>\n        <RegistrationFormList>\n          <RegistrationFormItem>\n            <RegistrationFormLabel>\n              Username\n              <TextField\n                value={inputs.name}\n                type=\"text\"\n                name=\"name\"\n                autoComplete=\"off\"\n                onChange={handleChange}\n                required\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n              />\n            </RegistrationFormLabel>\n          </RegistrationFormItem>\n          <RegistrationFormItem>\n            <RegistrationFormLabel>\n              Email\n              <TextField\n                value={inputs.email}\n                onChange={handleChange}\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"off\"\n                required\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n              />\n            </RegistrationFormLabel>\n          </RegistrationFormItem>\n\n          <RegistrationFormItem>\n            <RegistrationFormLabel>\n              Password\n              <TextField\n                value={inputs.password}\n                onChange={handleChange}\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"off\"\n                required\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n              />\n            </RegistrationFormLabel>\n          </RegistrationFormItem>\n        </RegistrationFormList>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Register\n        </Button>\n      </RegistrationFormWrapper>\n    </RegistrationFormContainer>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return (\n    <div>\n      <RegistrationForm />\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationFormContainer","styled","_templateObject","_taggedTemplateLiteral","RegistrationFormWrapper","_templateObject2","RegistrationFormList","_templateObject3","RegistrationFormItem","_templateObject4","RegistrationFormLabel","_templateObject5","RegistrationFormTitle","_templateObject6","_useState","useState","name","email","password","_useState2","_slicedToArray","inputs","setInputs","dispatch","useDispatch","handleChange","event","_event$target","target","value","prevState","_objectSpread","_defineProperty","reset","_jsxs","children","_jsx","onSubmit","preventDefault","trim","console","log","newUser","id","nanoid","register","alert","TextField","type","autoComplete","onChange","required","variant","Button","RegistrationForm"],"sourceRoot":""}